{"version":3,"sources":["Total.js","List.js","Input.js","App.js","index.js"],"names":["Total","props","className","total","List","retrievedData","map","item","category","amount","reduce","acc","cur","totalAmount","index","date","Input","useState","data","setData","items","setItems","TotalData","window","onload","localStorage","getItem","setItem","JSON","stringify","list","parse","Fragment","onSubmit","e","preventDefault","push","concat","id","type","name","placeholder","onChange","target","value","Date","onClick","clear","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAWeA,EATD,SAACC,GACb,OACE,sBAAKC,UAAU,QAAf,UACE,0CACA,wCAAMD,EAAME,MAAQF,EAAME,MAAQ,SC6BzBC,EAhCF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAYd,OACE,sBAAKH,UAAU,YAAf,UACE,cAAC,EAAD,CAAOC,MAbS,WAClB,GAAIE,EAOF,OANYA,EACTC,KAAI,SAACC,GAAD,MAA6B,QAAlBA,EAAKC,SAAqBD,EAAKE,OAAS,KACvDC,QAAO,SAACC,EAAKC,GAAN,OAAeD,IAAOC,IAAK,GACtBP,EACZC,KAAI,SAACC,GAAD,MAA6B,WAAlBA,EAAKC,SAAwBD,EAAKE,OAAS,KAC1DC,QAAO,SAACC,EAAKC,GAAN,OAAeD,IAAOC,IAAK,GAMvBC,KACd,oBAAIX,UAAU,UAAd,SACGG,GACCA,EAAcC,KAAI,SAACC,EAAMO,GACvB,GAAIP,EAAKE,QAAU,EACjB,OACE,qBAAgBP,UAAU,UAA1B,UACE,4BAAIK,EAAKQ,OADX,MACuB,wCAAMR,EAAKE,UADlC,KACgD,IAC9C,4BAAIF,EAAKC,aAFFM,YCmEVE,EAvFD,WACZ,MAAwBC,mBAAS,CAC/BR,OAAQ,EACRM,KAAM,GACNP,SAAU,KAHZ,mBAAOU,EAAP,KAAaC,EAAb,KAKA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEIC,EAAY,GA2BhB,OAVAC,OAAOC,OAAS,WACd,GAAqC,OAAjCC,aAAaC,QAAQ,QACvBD,aAAaE,QAAQ,OAAQC,KAAKC,UAAU,SACvC,CACL,IAAIC,EAAOF,KAAKG,MAAMN,aAAaC,QAAQ,SAC3CL,EAASS,KAMX,eAAC,IAAME,SAAP,WACE,qBAAK9B,UAAU,OAAf,SACE,uBAAM+B,SA5BU,SAACC,GAOrB,GANAA,EAAEC,iBACFb,EAAUc,KAAKlB,GACfI,EAAYA,EAAUe,OACpBT,KAAKG,MAAMN,aAAaC,QAAQ,SAAW,OAE7CD,aAAaE,QAAQ,OAAQC,KAAKC,UAAUP,IACP,OAAjCG,aAAaC,QAAQ,QACvBD,aAAaE,QAAQ,OAAQC,KAAKC,UAAU,SACvC,CACL,IAAIC,EAAOF,KAAKG,MAAMN,aAAaC,QAAQ,SAC3CL,EAASS,KAiBP,UACE,yDACA,uBACEQ,GAAG,OACHC,KAAK,SACLC,KAAK,SACLC,YAAY,qBACZC,SAAU,SAACR,GAAD,OACRf,EAAQ,2BAAKD,GAAN,IAAYT,OAAQyB,EAAES,OAAOC,MAAO7B,KAAM,IAAI8B,WAGzD,sBAAK3C,UAAU,SAAf,UACE,uBACEoC,GAAG,MACHC,KAAK,SACLC,KAAK,MACLI,MAAM,MACNE,QAAS,SAACZ,GACRf,EAAQ,2BAAKD,GAAN,IAAYV,SAAU0B,EAAES,OAAOH,WAI1C,uBACEF,GAAG,SACHC,KAAK,SACLC,KAAK,SACLI,MAAM,SACNE,QAAS,SAACZ,GACRf,EAAQ,2BAAKD,GAAN,IAAYV,SAAU0B,EAAES,OAAOH,WAG1C,uBACEF,GAAG,QACHC,KAAK,SACLC,KAAK,QACLI,MAAM,YACNE,QAAS,SAACZ,GACRT,aAAasB,QACb5B,EAAQ,CAAEV,OAAQ,EAAGD,SAAU,GAAIO,KAAM,gBAMnD,cAAC,EAAD,CAAMV,cAAee,QC7EZ4B,G,MAJH,WACV,OAAO,cAAC,EAAD,MCDTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.450e3735.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Total = (props) => {\r\n  return (\r\n    <div className='total'>\r\n      <h2>Balance:</h2>\r\n      <p>₹ {props.total ? props.total : 0.00}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Total;\r\n","import React from 'react';\r\nimport Total from './Total';\r\n\r\nconst List = ({ retrievedData }) => {\r\n  const totalAmount = () => {\r\n    if (retrievedData) {\r\n      const Add = retrievedData\r\n        .map((item) => (item.category === 'Add' ? item.amount : 0))\r\n        .reduce((acc, cur) => +acc + +cur, 0);\r\n      const Remove = retrievedData\r\n        .map((item) => (item.category === 'Remove' ? item.amount : 0))\r\n        .reduce((acc, cur) => +acc + +cur, 0);\r\n      return Add - Remove;\r\n    }\r\n  };\r\n  return (\r\n    <div className='list-main'>\r\n      <Total total={totalAmount()} />\r\n      <ul className='list-ul'>\r\n        {retrievedData &&\r\n          retrievedData.map((item, index) => {\r\n            if (item.amount >= 1) {\r\n              return (\r\n                <li key={index} className='list-li'>\r\n                  <p>{item.date}</p> - <p>₹ {item.amount}</p> -{' '}\r\n                  <p>{item.category}</p>\r\n                </li>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState } from 'react';\r\nimport List from './List';\r\n\r\nconst Input = () => {\r\n  const [data, setData] = useState({\r\n    amount: 0,\r\n    date: '',\r\n    category: '',\r\n  });\r\n  const [items, setItems] = useState('');\r\n\r\n  let TotalData = [];\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    TotalData.push(data);\r\n    TotalData = TotalData.concat(\r\n      JSON.parse(localStorage.getItem('item') || '[]')\r\n    );\r\n    localStorage.setItem('item', JSON.stringify(TotalData));\r\n    if (localStorage.getItem('item') === null) {\r\n      localStorage.setItem('item', JSON.stringify([]));\r\n    } else {\r\n      let list = JSON.parse(localStorage.getItem('item'));\r\n      setItems(list);\r\n    }\r\n  };\r\n\r\n  window.onload = function () {\r\n    if (localStorage.getItem('item') === null) {\r\n      localStorage.setItem('item', JSON.stringify([]));\r\n    } else {\r\n      let list = JSON.parse(localStorage.getItem('item'));\r\n      setItems(list);\r\n    }\r\n  };\r\n\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className='main'>\r\n        <form onSubmit={submitHandler}>\r\n          <h1>Expense tracker - Basic</h1>\r\n          <input\r\n            id='text'\r\n            type='number'\r\n            name='amount'\r\n            placeholder='Enter your amount!'\r\n            onChange={(e) =>\r\n              setData({ ...data, amount: e.target.value, date: new Date() })\r\n            }\r\n          />\r\n          <div className='button'>\r\n            <input\r\n              id='add'\r\n              type='submit'\r\n              name='Add'\r\n              value='ADD'\r\n              onClick={(e) => {\r\n                setData({ ...data, category: e.target.name });\r\n              }}\r\n            />\r\n\r\n            <input\r\n              id='remove'\r\n              type='submit'\r\n              name='Remove'\r\n              value='REMOVE'\r\n              onClick={(e) => {\r\n                setData({ ...data, category: e.target.name });\r\n              }}\r\n            />\r\n            <input\r\n              id='clear'\r\n              type='button'\r\n              name='Clear'\r\n              value='CLEAR ALL'\r\n              onClick={(e) => {\r\n                localStorage.clear();\r\n                setData({ amount: 0, category: '', date: '' });\r\n              }}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <List retrievedData={items} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from 'react';\nimport Input from './Input';\nimport './App.css'\n\nconst App = () => {\n  return <Input />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}